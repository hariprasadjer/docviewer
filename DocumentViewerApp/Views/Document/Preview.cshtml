@model DocumentViewerApp.Models.DocumentViewModel
@{
    ViewData["Title"] = "Preview";
    var contentType = Model.ContentType;
    if (string.IsNullOrEmpty(contentType))
    {
        var ext = System.IO.Path.GetExtension(Model.DocumentUrl).ToLowerInvariant();
        contentType = ext switch
        {
            ".pdf" => "application/pdf",
            ".png" => "image/png",
            ".jpg" or ".jpeg" => "image/jpeg",
            ".gif" => "image/gif",
            ".bmp" => "image/bmp",
            ".webp" => "image/webp",
            _ => string.Empty
        };
    }
}
@if (contentType.StartsWith("application/pdf"))
{
    <iframe src="@Model.DocumentUrl" width="100%" height="600px"></iframe>
}
else if (contentType.StartsWith("image/"))
{
    <img src="@Model.DocumentUrl" class="img-fluid" alt="Preview" />
}
else
{
    <p>Unable to preview this document type.</p>
}
<div class="mt-3">
    <a href="@Model.DocumentUrl" class="btn btn-secondary" download>Download</a>
</div>
